#!/usr/bin/env python3# Exercise: Presidents# Author GitHub usernames:# #1:# #2:# Instructions:# Write a program to:# (1) Load the data from presidents.txt into a dictionary.# (2) Print the years the greatest and least number of presidents were alive.#     (between 1732 and 2016 (inclusive))#     Ex.#       'least = 2015'#       'John Doe'#       'most = 2015'#       'John Doe, Jane Doe, John Adams, and Jane Adams'# Bonus: Confirm there are no ties. If there is a tie print like so:#     Ex.#       'least = 1900, 2013-2015'#       'John Doe (1900)'#       'Jane Doe (2013-2015)'#       'most = 1900-1934, 2013'#       'John Doe, Jane Doe, John Adams, and Jane Adams (1900-1933)'#       'Sally Doe, Billy Doe, Mary Doe, and Cary Doe (1934)'#       'Alice Doe, Bob Doe, Zane Doe, and Yi Do (2013)'# (3) Write your print statements to a file (greatest_least.txt) as well.# Upload that file as well.############################################################################### Imports# Bodydef build_presidents_dict(filename):    presidents_dict = dict()    with open(filename, "r") as presidents_file:        presidents_list = presidents_file.readlines()        for president in presidents_list:            president_date = president.strip().split(",")            if president_date[2] == "None":                president_date[2] = "2016"            presidents_dict[tuple(president_date[1:3])] = president_date[0]    return presidents_dictdef presidents_within_range(year, presidents_dict):    names = list()    for year_range, name in presidents_dict.items():        if int(year_range[0]) <= year <= int(year_range[1]):            names.append(name)    return namesdef build_presidents_alive_dict(presidents_dict):    presidents_alive_dict = dict()    for year in range(1732, 2017):        presidents_alive_dict[year] = presidents_within_range(            year, presidents_dict)    return presidents_alive_dictdef print_least(presidents_alive_dict):    min_len = 999    for year, list_of_presidents in presidents_alive_dict.items():        if min_len > len(list_of_presidents):            min_len = len(list_of_presidents)            min_year = year            min_president_names = list_of_presidents    least_text = "least = {}\n".format(min_year)    for president_name in min_president_names:        least_text = least_text + president_name        if len(min_president_names) >= 2 and president_name == min_president_names[-2]:            least_text = least_text + " and "        elif president_name != min_president_names[-1]:            least_text = least_text + ", "    print(least_text)    return least_textdef print_most(presidents_alive_dict):    max_len = 0    for year, list_of_presidents in presidents_alive_dict.items():        if max_len < len(list_of_presidents):            max_len = len(list_of_presidents)            max_year = year            max_president_names = list_of_presidents    most_text = "most = {}\n".format(max_year)    for president_name in max_president_names:        most_text = most_text + president_name        if len(max_president_names) >=2 and president_name == max_president_names[-2]:            most_text = most_text + " and "        elif president_name != max_president_names[-1]:            most_text = most_text + ", "    print(most_text)    return most_textdef write_to_file(text):    with open("greatest_least.txt", "w") as greatest_least_file:        greatest_least_file.write(text)    ##########################################################################def main():  # CALL YOUR FUNCTION BELOW    presidents_dict = build_presidents_dict("presidents.txt")    presidents_alive_dict = build_presidents_alive_dict(presidents_dict)    least_text = print_least(presidents_alive_dict)    most_text = print_most(presidents_alive_dict)    write_to_file(least_text + "\n" + most_text)if __name__ == '__main__':    main()